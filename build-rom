#!/bin/bash

# Start tracking time
START="$(date +%s)"

# Common script
source "$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" || return; pwd)/common"

# Parameters
while [[ "${#}" -ge 1 ]]; do
    case "${1}" in
        "-r"|"--rom")
            shift && enforce_value "${@}"
            ROM="${1}" ;;

        "-d"|"--device")
            shift && enforce_value "${@}"
            DEVICE="${1}" ;;

        "-g"|"--gdrive")
            GDRIVE=true ;;

        "-s"|"--sync")
            SYNC=true ;;

        "-c"|"--clean")
            CLEAN=true ;;

        "-off"|"--poweroff")
            POWEROFF=true ;;

        *) die "Invalid parameter specified!" ;;
    esac

    shift
done

# Default parameters
[[ -z "${ROM}" ]] && ROM="abc"
[[ -z "${DEVICE}" ]] && DEVICE="chiron"

# Check ROM
if [[ "${ROM}" != "abc" && "${ROM}" != "aosip" ]]
then
  die "Only ABC and AOSIP are supported!"
fi

# Build dirs
ROM_PATH="${HOME}/${ROM}"

# Setup environment
info "Setting up build environment"
cd "${ROM_PATH}" || die "ROM dir doesn't exist!"
source "${ROM_PATH}/build/envsetup.sh"

# Set the device
info "Setting up the device..."
if [ "${ROM}" == "abc" ]
then
  breakfast "${DEVICE}-userdebug"
elif [ "${ROM}" == "aosip" ]
then
  lunch "aosip_${DEVICE}-userdebug"
fi

# Sync repo if needed
if [[ -n "${SYNC}" ]]
then
  repo sync
fi

# Go clean if needed, otherwise installclean
if [[ -n "${CLEAN}" ]]
then
  make clobber
else
  make installclean
fi

#  Start compilation
info "Compiling ${ROM} for ${DEVICE} and saving a build log file"
if [ "${ROM}" == "abc" ]
then
  mka bacon 2>&1 | tee "${HOME}/logs/buildrom.log"
elif [ "${ROM}" == "aosip" ]
then
  time mka kronic 2>&1 | tee "${HOME}/logs/build.log"
fi

# Output files
ROMZIP="$(find "${ROM_PATH}/out/target/product/${DEVICE}" -iname "${ROM}*${DATE}*.zip" )"
CHANGELOG="$(find "${ROM_PATH}/out/target/product/${DEVICE}" -iname "Changelog*${DATE}*.txt" )"

# If the above was successful
if [[ -f "${ROMZIP}" ]]
then
  # Google Drive upload
  if [[ -n "${GDRIVE}" ]]
  then
    info "Uploading build to Google Drive"
    gdrive upload "${ROMZIP}"
    # Upload changelog if ABC
    if [ "${ROM}" == "abc" ]
    then
      gdrive upload "${CHANGELOG}"
    fi
  fi
  success "Build successful"
# If the build failed
else
  failed "Build failed"
fi

# Kill java if it's hanging on
pkill java

# Stop tracking time
END="$(date +%s)"
info "Build time: $(echo "$(("${END}"-"${START}"))" | awk '{print int($1/60)" minutes and "int($1%60)" seconds"}')"

# Shutdown the system if required by the user
if [[ -n "${POWEROFF}" ]]
then
  poweroff
fi
